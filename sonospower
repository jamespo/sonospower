#!/usr/bin/env python

import logging
import os
import soco
import time
from powermate import PowerMate


logger = logging.getLogger(__name__)


def set_light_on_volume():
    powermate.set_led_solid(int(sonos.volume * 0.392))


def on_turn(amount):
    logger.debug(f'Turned: {amount}')
    sonos.volume += amount
    set_light_on_volume()


def on_button(pressed):
    status = sonos.get_current_transport_info()
    if pressed:
        logger.debug('Button pressed')
        if status['current_transport_state'] == 'PLAYING':
            sonos.pause()
        else:
            sonos.play()
    else:
        logger.debug('Button released')


def main():
    if os.getenv('SPDEBUG'):
        logger.setLevel(logging.DEBUG)
    else:
        logger.setLevel(logging.INFO)
    global sonos, powermate
    sonos = soco.discovery.any_soco()
    paths = PowerMate.enumerate()
    if not paths or not sonos:
        logger.error('No PowerMates / Sonos speakers detected')
    else:
        powermate = PowerMate(
            paths[0],
            turn_callback=on_turn,
            button_callback=on_button)
        powermate._loop.run_forever()


if __name__ == '__main__':
    main()
